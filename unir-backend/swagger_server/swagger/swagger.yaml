---
swagger: "2.0"
info:
  version: "1.0.9-abcd"
  title: "TFM UNIR"
  contact:
    name: "Jorge Muñoz y Javier Muñoz"
basePath: "/v1"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
- "application/xml"
security:
- internalApiKey: []
paths:
  /login:
    post:
      tags:
      - "Auth"
      description: "Obtiene un token a partir de usuario y contraseña válidos"
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "credentials"
        description: "user login"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        200:
          description: "valid login"
          schema:
            type: "string"
        401:
          description: "invalid login"
      x-swagger-router-controller: "swagger_server.controllers.auth"
  /logout:
    delete:
      tags:
      - "Auth"
      description: "Revoca un token obtenido con el método /login"
      operationId: "logout"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "revoked"
        401:
          description: "invalid token"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.auth"
  /user:
    get:
      tags:
      - "User"
      description: "Obtiene los datos de un usuario existente"
      operationId: "get_user"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "revoked"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        401:
          description: "invalid token"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.user"
    post:
      tags:
      - "User"
      description: "Crea un nuevo usuario en la BD"
      operationId: "add_user"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "userData"
        description: "user login"
        required: true
        schema:
          $ref: "#/definitions/UserRegisterData"
      responses:
        200:
          description: "revoked"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        401:
          description: "invalid token"
        406:
          description: "invalid data"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.user"
  /transaction:
    get:
      tags:
      - "Transaction"
      description: "Obtiene una lista de las últimas transacciones del usuario"
      operationId: "get_transactions"
      produces:
      - "application/json"
      parameters:
      - name: "from_date"
        in: "query"
        description: "from date filter"
        required: false
        type: "string"
      responses:
        200:
          description: "list of transactions"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Transaction"
        401:
          description: "invalid token"
        406:
          description: "invalid data"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.transaction"
    post:
      tags:
      - "Transaction"
      description: "Añade una nueva transacción en la cuenta del usuario"
      operationId: "add_transaction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "transactionData"
        description: "transaction amount"
        required: true
        schema:
          $ref: "#/definitions/TransactionData"
      responses:
        200:
          description: "saved"
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: "invalid token"
        406:
          description: "invalid data"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.transaction"
  /balance:
    get:
      tags:
      - "Transaction"
      description: "Obtiene el estado actual de la cuenta del usuario"
      operationId: "get_balance"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "last balance"
          schema:
            $ref: "#/definitions/Balance"
        401:
          description: "invalid token"
      security:
      - internalApiKey: []
      x-swagger-router-controller: "swagger_server.controllers.transaction"
securityDefinitions:
  internalApiKey:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Credentials:
    type: "object"
    properties:
      user:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      user: "user"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      login:
        type: "string"
      fullname:
        type: "string"
    example:
      id: 0
      fullname: "fullname"
      login: "login"
  UserRegisterData:
    type: "object"
    properties:
      login:
        type: "string"
      fullname:
        type: "string"
      password:
        type: "string"
      account:
        type: "string"
    example:
      password: "password"
      fullname: "fullname"
      login: "login"
      account: "ES123123123123132"
  TransactionData:
    type: "object"
    properties:
      amount:
        type: "integer"
        format: "int32"
      description:
        type: "string"
    example:
      amount: 0
      description: "description"
  Transaction:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
      account_id:
        type: "integer"
        format: "int32"
      amount:
        type: "integer"
        format: "int32"
      description:
        type: "string"
      current_balance:
        type: "integer"
        format: "int32"
      trasnaction_date:
        type: "string"
    example:
      amount: 1
      account_id: 6
      description: "description"
      current_balance: 5
      id: 0
      transaction_date: "transaction_date"
  Balance:
    type: "object"
    properties:
      account_id:
        type: "integer"
        format: "int32"
      current_balance:
        type: "integer"
        format: "int32"
      last_transaction_date:
        type: "string"
    example:
      account_id: 0
      current_balance: 6
      last_transaction_date: "last_transaction_date"
