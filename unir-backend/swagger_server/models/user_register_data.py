# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UserRegisterData(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, login: str=None, fullname: str=None, password: str=None, account: str=None):  # noqa: E501
        """UserRegisterData - a model defined in Swagger

        :param login: The login of this UserRegisterData.  # noqa: E501
        :type login: str
        :param fullname: The fullname of this UserRegisterData.  # noqa: E501
        :type fullname: str
        :param password: The password of this UserRegisterData.  # noqa: E501
        :type password: str
        :param account: The account of this UserRegisterData.  # noqa: E501
        :type account: str
        """
        self.swagger_types = {
            'login': str,
            'fullname': str,
            'password': str,
            'account': str
        }

        self.attribute_map = {
            'login': 'login',
            'fullname': 'fullname',
            'password': 'password',
            'account': 'account'
        }

        self._login = login
        self._fullname = fullname
        self._password = password
        self._account = account

    @classmethod
    def from_dict(cls, dikt) -> 'UserRegisterData':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserRegisterData of this UserRegisterData.  # noqa: E501
        :rtype: UserRegisterData
        """
        return util.deserialize_model(dikt, cls)

    @property
    def login(self) -> str:
        """Gets the login of this UserRegisterData.


        :return: The login of this UserRegisterData.
        :rtype: str
        """
        return self._login

    @login.setter
    def login(self, login: str):
        """Sets the login of this UserRegisterData.


        :param login: The login of this UserRegisterData.
        :type login: str
        """

        self._login = login

    @property
    def fullname(self) -> str:
        """Gets the fullname of this UserRegisterData.


        :return: The fullname of this UserRegisterData.
        :rtype: str
        """
        return self._fullname

    @fullname.setter
    def fullname(self, fullname: str):
        """Sets the fullname of this UserRegisterData.


        :param fullname: The fullname of this UserRegisterData.
        :type fullname: str
        """

        self._fullname = fullname

    @property
    def password(self) -> str:
        """Gets the password of this UserRegisterData.


        :return: The password of this UserRegisterData.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this UserRegisterData.


        :param password: The password of this UserRegisterData.
        :type password: str
        """

        self._password = password

    @property
    def account(self) -> str:
        """Gets the account of this UserRegisterData.


        :return: The account of this UserRegisterData.
        :rtype: str
        """
        return self._account

    @account.setter
    def account(self, account: str):
        """Sets the account of this UserRegisterData.


        :param account: The account of this UserRegisterData.
        :type account: str
        """

        self._account = account
